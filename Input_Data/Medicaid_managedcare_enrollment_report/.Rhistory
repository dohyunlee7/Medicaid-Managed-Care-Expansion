View(full_data_table)
View(d_2015)
grouped_table[["2015"]][["state"]]
d_2015 <- read_csv(paste0(path, "/data_2015.csv"))
path <- file.path("D:", "Groups", "YSPH-HPM-Ndumele", "Networks", "Dohyun",
"medicaid_privatization_exp", "Input_Data",
"Medicaid_managedcare_enrollment_report",
"by_program_pop_from_report")
d_2015 <- read_csv(paste0(path, "/data_2015.csv"))
grouped_table[["2015"]][["crb_mc_enrollees"]]
d_2015 <- d_2015 %>%
select(state, total_med_enr)
View(d_2015)
grouped_table[["2015"]] <- left_join(grouped_table[["2015"]],
d_2015,
by = "state")
View(grouped_table)
d_2015 <- d_2015 %>%
select(state, total_med_enr) %>%
mutate(total_med_enr = as.numeric(total_med_enr))
grouped_table[["2015"]] <- left_join(grouped_table[["2015"]],
d_2015,
by = "state")
grouped_table[["2015"]] <- grouped_table[["2015"]] %>%
left_join(d_2015, by = "state")
# Group each year as its own sublist for easier joining
grouped_table <- full_data_table %>%
group_by(year) %>%
group_split() %>%
lapply(as.data.frame)
View(grouped_table)
names(grouped_table) <- setdiff(2003:2021, 2012)
grouped_table[["2015"]] <- left_join(grouped_table[["2015"]],
d_2015,
by = "state")
grouped_table[["2015"]][["total_med_enr"]]
grouped_table[["2015"]] <- grouped_table[["2015"]] %>%
mutate(med_enr_pct = crb_mc_enrollees / total_med_enr)
d_2014 <- read_csv(paste0(path, "/data_2014.csv"))
View(d_2014)
d_2014 <- d_2014 %>%
select(state, total_med_enr) %>%
mutate(total_med_enr = as.numeric(total_med_enr))
View(d_2014)
grouped_table[["2014"]] <- left_join(grouped_table[["2014"]],
d_2014,
by = "state")
grouped_table[["2014"]] <- grouped_table[["2014"]] %>%
mutate(med_enr_pct = crb_mc_enrollees / total_med_enr)
d_2013 <- read_csv(paste0(path, "/data_2013.csv"))
# Group each year as its own sublist for easier joining
grouped_table <- full_data_table %>%
group_by(year) %>%
group_split() %>%
lapply(as.data.frame)
# Name lists as the year
names(grouped_table) <- setdiff(2003:2021, 2012)
join_and_append <- function(data_list, df, year) {
df <- df %>%
select(state, total_med_enr) %>%
mutate(total_med_enr = as.numeric(total_med_enr))
data_list[[year]] <- left_join(data_list[[year]], df, by = "state")
data_list[[year]] <- data_list[[year]] %>%
mutate(med_enr_pct = crb_mc_enrollees / total_med_enr)
}
join_and_append(grouped_table, d_2015, "2015")
join_and_append(grouped_table, d_2015, "2015")
View(grouped_table)
join_and_append <- function(data_list, df, year) {
df <- df %>%
select(state, total_med_enr) %>%
mutate(total_med_enr = as.numeric(total_med_enr))
data_list[[year]] <- left_join(data_list[[year]], df, by = "state")
data_list[[year]] <- data_list[[year]] %>%
mutate(med_enr_pct = crb_mc_enrollees / total_med_enr)
return(data_list[[year]])
}
grouped_table[["2015"]] <- join_and_append(grouped_table, d_2015, "2015")
View(grouped_table)
join_and_fill <- function(data_list, df, year) {
df <- df %>%
select(state, total_med_enr) %>%
mutate(total_med_enr = as.numeric(total_med_enr))
data_list[[year]] <- left_join(data_list[[year]], df, by = "state")
data_list[[year]] <- data_list[[year]] %>%
mutate(med_enr_pct = crb_mc_enrollees / total_med_enr)
return(data_list[[year]])
}
grouped_table[["2015"]] <- join_and_fill(grouped_table, d_2015, "2015")
# Group each year as its own sublist for easier joining
grouped_table <- full_data_table %>%
group_by(year) %>%
group_split() %>%
lapply(as.data.frame)
# Name lists as the year
names(grouped_table) <- setdiff(2003:2021, 2012)
grouped_table[["2015"]] <- join_and_fill(grouped_table, d_2015, "2015")
View(join_and_fill)
grouped_table[["2014"]] <- join_and_fill(grouped_table, d_2014, "2014")
View(d_2013)
grouped_table[["2013"]] <- join_and_fill(grouped_table, d_2013, "2013")
d_2011 <- read_csv(paste0(path, "/data_2011.csv"))
View(d_2011)
View(data_list)
View(grouped_table)
View(grouped_table)
d_2010 <- read_csv(paste0(path, "/data_2010.csv"))
View(d_2010)
View(grouped_table)
# Change path depending on file
pdf_path <- file.path("D:", "Groups", "YSPH-HPM-Ndumele", "Networks", "Dohyun",
"medicaid_privatization_exp", "Input_Data",
"Medicaid_managedcare_enrollment_report",
"MMC Enrollment Report 2010 Complete Program Summary.pdf")
# Get pages from pdf
pages <- pdf_text(pdf_path)
# Filter for just the MMC enrollment numbers by state
pages <- pages[56:57]
# Organize page text into lists
list_data <- lapply(pages, pdf_to_list)
# Consolidate list text into data frame
mmc_enr <- as.data.frame(do.call(rbind, list_data[[1]]))
# Remove first two columns and first couple and last rows
mmc_enr <- mmc_enr[-c(1:3, 57:61), -c(1,2)]
View(mmc_enr)
# Change state names to title case
mmc_enr$state <- str_to_title(mmc_enr$state)
# Rename columns
names(mmc_enr) <- c("state",
"total_med_enr",
"managed_care_enrollment",
"pct_in_managed_care")
# Change state names to title case
mmc_enr$state <- str_to_title(mmc_enr$state)
View(mmc_enr)
# Clean up number formatting
mmc_enr <- mmc_enr %>%
mutate(total_med_enr = gsub(",", "", total_med_enr),
managed_care_enrollment = gsub(",", "", managed_care_enrollment),
pct_in_managed_care = gsub("%", "", pct_in_managed_care)) %>%
mutate(total_med_enr = as.numeric(total_med_enr),
managed_care_enrollment = as.numeric(managed_care_enrollment),
pct_in_managed_care = as.numeric(pct_in_managed_care) / 100)
# Consolidate list text into data frame
mmc_entity_enr <- as.data.frame(do.call(rbind, list_data[[2]]))
# Remove unneeded rows/columns
mmc_entity_enr <- mmc_entity_enr[-c(1:3, 57:61), -10]
# Rename column names
names(mmc_entity_enr) <- c("state",
"hio",
"commercial_mco",
"medicaid_only_mco",
"pccm",
"pihp",
"pahp",
"pace",
"other")
# Omit all commas
mmc_entity_enr <- as.data.frame(sapply(mmc_entity_enr, function(x) {
x <- gsub(",", "", x)
}))
# Convert columns 2-9 to numeric
mmc_entity_enr <- mmc_entity_enr %>%
mutate(across(2:9, ~as.numeric(.)))
# Change naming for DC
mmc_entity_enr$state <- str_to_title(mmc_entity_enr$state)
View(mmc_entity_enr)
# Join MMC enrollment data and MMC entity enrollment data
mmc_2010 <- left_join(mmc_enr, mmc_entity_enr, by = "state")
View(mmc_2010)
mmc_2010$state <- gsub("District Of Columbia",
"District of Columbia",
mmc_2010$state)
View(mmc_2010)
save_path <- file.path("D:", "Groups", "YSPH-HPM-Ndumele", "Networks", "Dohyun",
"medicaid_privatization_exp", "Input_Data",
"Medicaid_managedcare_enrollment_report",
"program_summary_from_report")
write_csv(mmc_2010, paste0(save_path, "/data_2010.csv"))
# Change path depending on file
setwd(file.path("D:", "Groups", "YSPH-HPM-Ndumele", "Networks", "Dohyun",
"medicaid_privatization_exp", "Input_Data",
"Medicaid_managedcare_enrollment_report"))
mmc_2008 <- pdf_text("2008_medicaid_managed_care_reports/2008_mmc_enrollment.pdf")
# Organize page text into lists
mmc_2008_list <- pdf_to_list(mmc_2008)
# Consolidate list text into data frame
mmc_2008_df <- as.data.frame(do.call(rbind, mmc_2008_list))
mmc_2008_df <- mmc_2008_df[-c(1:3, 61:64), -c(1:2)]
mmc_2008_df <- mmc_2008_df[rowSums(mmc_2008_df == "") == 0, ]
names(mmc_2008_df) <- c("state",
"total_med_enr",
"managed_care_enrollment",
"pct_in_managed_care")
View(mmc_2008_df)
mmc_2008_df <- mmc_2008_df %>%
mutate(total_med_enr = gsub(",", "", total_med_enr),
managed_care_enrollment = gsub(",", "", managed_care_enrollment),
pct_in_managed_care = gsub("%", "", pct_in_managed_care)) %>%
mutate(total_med_enr = as.numeric(total_med_enr),
managed_care_enrollment = as.numeric(managed_care_enrollment),
pct_in_managed_care = as.numeric(pct_in_managed_care) / 100)
mmc_2008_df$state <- str_to_title(mmc_2008_df$state)
mmc_entity_2008 <- pdf_text("2008_medicaid_managed_care_reports/2008_mmc_entity_enrollment.pdf")
mmc_entity_2008_list <- pdf_to_list(mmc_entity_2008)
mmc_entity_2008_df <- as.data.frame(do.call(rbind, mmc_entity_2008_list))
mmc_entity_2008_df <- mmc_entity_2008_df[-c(1:3, 60:63), -10]
names(mmc_entity_2008_df) <- c("state",
"hio",
"commercial_mco",
"medicaid_only_mco",
"pccm",
"pihp",
"pahp",
"pace",
"other")
# Omit all commas
mmc_entity_2008_df <- as.data.frame(sapply(mmc_entity_2008_df, function(x) {
x <- gsub(",", "", x)
}))
mmc_entity_2008_df <- mmc_entity_2008_df[-grep("Missour|^$",
mmc_entity_2008_df$state), ]
mmc_entity_2008_df$state <- str_to_title(mmc_2008_df$state)
mmc_2008_full <- left_join(mmc_2008_df, mmc_entity_2008_df, by = "state")
missouri <- data.frame(
state = "Missouri",
total_med_enr = 833112,
managed_care_enrollment = 810828,
pct_in_managed_care = 0.9733,
hio = 0,
commercial_mco = 0,
medicaid_only_mco = 345868,
pccm = 0,
pihp = 0,
pahp = 464764,
pace = 196,
other = 0
)
mmc_2008_full <- rbind(mmc_2008_full, missouri)
mmc_2008_full <- mmc_2008_full[order(mmc_2008_full$state), ]
View(mmc_2008_df)
write_csv(mmc_2008_full, paste0(save_path, "/data_2008.csv"))
mmc_2009 <- pdf_text("2009_medicaid_managed_care_reports/2009_mmc_enrollment.pdf")
# Organize page text into lists
mmc_2009_list <- pdf_to_list(mmc_2009)
# Consolidate list text into data frame
mmc_2009_df <- as.data.frame(do.call(rbind, mmc_2009_list))
mmc_2009_df <- mmc_2009_df[-c(1:3, 57:61), -c(1,2)]
names(mmc_2009_df) <- c("state",
"total_med_enr",
"managed_care_enrollment",
"pct_in_managed_care")
mmc_2009_df <- mmc_2009_df %>%
mutate(total_med_enr = gsub(",", "", total_med_enr),
managed_care_enrollment = gsub(",", "", managed_care_enrollment),
pct_in_managed_care = gsub("%", "", pct_in_managed_care)) %>%
mutate(total_med_enr = as.numeric(total_med_enr),
managed_care_enrollment = as.numeric(managed_care_enrollment),
pct_in_managed_care = as.numeric(pct_in_managed_care) / 100)
mmc_2009_df$state <- str_to_title(mmc_2009_df$state)
mmc_entity_2009 <- pdf_text("2009_medicaid_managed_care_reports/2009_mmc_entity_enrollment.pdf")
mmc_entity_2009_list <- pdf_to_list(mmc_entity_2009)
View(mmc_2008_full)
mmc_2008_full$state <- gsub("Dist. Of Columbia",
"District of Columbia",
mmc_2008_full$state)
View(mmc_2008_full)
write_csv(mmc_2008_full, paste0(save_path, "/data_2008.csv"))
mmc_2009 <- pdf_text("2009_medicaid_managed_care_reports/2009_mmc_enrollment.pdf")
# Organize page text into lists
mmc_2009_list <- pdf_to_list(mmc_2009)
# Consolidate list text into data frame
mmc_2009_df <- as.data.frame(do.call(rbind, mmc_2009_list))
mmc_2009_df <- mmc_2009_df[-c(1:3, 57:61), -c(1,2)]
names(mmc_2009_df) <- c("state",
"total_med_enr",
"managed_care_enrollment",
"pct_in_managed_care")
mmc_2009_df <- mmc_2009_df %>%
mutate(total_med_enr = gsub(",", "", total_med_enr),
managed_care_enrollment = gsub(",", "", managed_care_enrollment),
pct_in_managed_care = gsub("%", "", pct_in_managed_care)) %>%
mutate(total_med_enr = as.numeric(total_med_enr),
managed_care_enrollment = as.numeric(managed_care_enrollment),
pct_in_managed_care = as.numeric(pct_in_managed_care) / 100)
mmc_2009_df$state <- str_to_title(mmc_2009_df$state)
mmc_entity_2009 <- pdf_text("2009_medicaid_managed_care_reports/2009_mmc_entity_enrollment.pdf")
mmc_entity_2009_list <- pdf_to_list(mmc_entity_2009)
mmc_entity_2009_df <- as.data.frame(do.call(rbind, mmc_entity_2009_list))
mmc_entity_2009_df <- mmc_entity_2009_df[-c(1:3, 57:61), -10]
names(mmc_entity_2009_df) <- c("state",
"hio",
"commercial_mco",
"medicaid_only_mco",
"pccm",
"pihp",
"pahp",
"pace",
"other")
mmc_entity_2009_df <- as.data.frame(sapply(mmc_entity_2009_df, function(x) {
x <- gsub(",", "", x)
}))
mmc_entity_2009_df$state <- str_to_title(mmc_entity_2009_df$state)
mmc_2009_full <- left_join(mmc_2009_df, mmc_entity_2009_df, by = "state")
View(mmc_2009_full)
mmc_2009_full$state <- gsub("District Of Columbia",
"District of Columbia",
mmc_2009_full$state)
View(mmc_2009_full)
write_csv(mmc_2009_full, paste0(save_path, "/data_2009.csv"))
# Define years
years <- setdiff(2008:2015, 2012)
# Get all file names with the years attached
file_names <- paste0("data_", years, ".csv")
file_names
# Apply read_csv to the file names
files_list <- lapply(file_names, read_csv)
# Get all file names with the years attached
file_names <- paste0("/data_", years, ".csv")
# Apply read_csv to the file names
files_list <- lapply(file_names, read_csv)
path <- file.path("D:", "Groups", "YSPH-HPM-Ndumele", "Networks", "Dohyun",
"medicaid_privatization_exp", "Input_Data",
"Medicaid_managedcare_enrollment_report",
"by_program_pop_from_report")
getwd()
# Get all file names with the years attached
file_names <- paste0(path, "/data_", years, ".csv")
file_names
# Apply read_csv to the file names
files_list <- lapply(file_names, read_csv)
View(files_list)
View(files_list)
names(files_list) <- years
View(files_list)
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table, files_list[[as.character(year)]], as.character(year))
})
View(d_2010)
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table, files_list[[as.character(year)]], as.character(year))
})
# Get all file names with the years attached
file_names <- paste0(path, "/data_", years, ".csv")
# Apply read_csv to the file names
files_list <- lapply(file_names, read_csv)
names(files_list) <- years
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table, files_list[[as.character(year)]], as.character(year))
})
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table, files_list[[as.character(year)]], as.character(year))
})
View(grouped_table)
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table, files_list[[as.character(year)]], as.character(year))
})
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table, files_list[[as.character(year)]], as.character(year))
})
View(d_2015)
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table,
files_list[[as.character(year)]],
as.character(year))
})
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table[[as.character(year)]],
files_list[[as.character(year)]],
as.character(year))
})
#' Joins Medicaid total enrollment to bigger list of dataframes and
#' calculates the proportion of comprehensive risk-based MMC enrollees
#' at state level
#' @param data_list list of dataframes that contains MCO enrollment
#'                  numbers
#' @param df annual dataframe that contains denominator scraped from MMC
#'           enrollment report
#' @param year input for target year
#' @return updated sublist for desired year
join_and_fill <- function(sublist, df) {
# Select just state and total state Medicaid enrollment
df <- df %>%
select(state, total_med_enr) %>%
mutate(total_med_enr = as.numeric(total_med_enr))
# Perform a left join based on 'state'
sublist <- left_join(sublist, df, by = "state")
# Join denominator to sublist
# data_list[[year]] <- left_join(data_list[[year]], df, by = "state")
# Calculate proportion of CRB MMC enrollees per state
sublist <- sublist %>%
mutate(med_enr_pct = crb_mc_enrollees / total_med_enr)
return(sublist)
}
# Apply the join_and_fill function over the list of years
grouped_table[as.character(years)] <- lapply(years, function(year) {
sublist <- grouped_table[[as.character(year)]]
df <- files_list[[as.character(year)]]
# Pass the sublist for the year and the corresponding df to the function
join_and_fill(sublist, df)
})
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table[[as.character(year)]],
files_list[[as.character(year)]],
as.character(year))
})
#' Joins Medicaid total enrollment to bigger list of dataframes and
#' calculates the proportion of comprehensive risk-based MMC enrollees
#' at state level
#' @param data_list list of dataframes that contains MCO enrollment
#'                  numbers
#' @param df annual dataframe that contains denominator scraped from MMC
#'           enrollment report
#' @param year input for target year
#' @return updated sublist for desired year
join_and_fill <- function(data_list, df, year) {
# Select just state and total state Medicaid enrollment
df <- df %>%
select(state, total_med_enr) %>%
mutate(total_med_enr = as.numeric(total_med_enr))
# Join denominator to sublist
data_list[[year]] <- left_join(data_list[[year]], df, by = "state")
# Calculate proportion of CRB MMC enrollees per state
data_list[[year]] <- data_list[[year]] %>%
mutate(med_enr_pct = crb_mc_enrollees / total_med_enr)
return(data_list[[year]])
}
files_list[[as.character(2015)]]
grouped_table[[as.character(2015)]]
grouped_table[[as.character(2014)]]
grouped_table[[as.character(2013)]]
grouped_table[[as.character(2011)]]
grouped_table[[as.character(2010)]]
grouped_table[[as.character(2009)]]
grouped_table[[as.character(2011)]]
grouped_table[[as.character(2013)]]
View(mmc_2008_full)
View(mmc_2009_full)
View(mmc_2009_full)
#' Joins Medicaid total enrollment to bigger list of dataframes and
#' calculates the proportion of comprehensive risk-based MMC enrollees
#' at state level
#' @param data_list list of dataframes that contains MCO enrollment
#'                  numbers
#' @param df annual dataframe that contains denominator scraped from MMC
#'           enrollment report
#' @param year input for target year
#' @return updated sublist for desired year
join_and_fill <- function(data_list, df, year) {
# Select just state and total state Medicaid enrollment
df <- df %>%
select(state, total_med_enr) %>%
mutate(total_med_enr = as.numeric(total_med_enr))
# Join denominator to sublist
data_list[[year]] <- left_join(data_list[[year]], df, by = "state")
# Calculate proportion of CRB MMC enrollees per state
data_list[[year]] <- data_list[[year]] %>%
mutate(med_enr_pct = crb_mc_enrollees / total_med_enr)
return(data_list[[year]])
}
# Get all file names with the years attached
file_names <- paste0(path, "/data_", years, ".csv")
# Apply read_csv to the file names
files_list <- lapply(file_names, read_csv)
names(files_list) <- years
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table[[as.character(year)]],
files_list[[as.character(year)]],
as.character(year))
})
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table,
files_list[[as.character(year)]],
as.character(year))
})
View(grouped_table)
grouped_table[["2011"]][["state"]]
grouped_table[["2010"]]
# Group each year as its own sublist for easier joining
grouped_table <- full_data_table %>%
group_by(year) %>%
group_split() %>%
lapply(as.data.frame)
View(grouped_table)
# Name lists as the year
names(grouped_table) <- setdiff(2003:2021, 2012)
# Define years
years <- setdiff(2008:2015, 2012)
# Get all file names with the years attached
file_names <- paste0(path, "/data_", years, ".csv")
file_names
# Apply read_csv to the file names
files_list <- lapply(file_names, read_csv)
View(files_list)
names(files_list) <- years
View(files_list)
grouped_table[as.character(years)] <- lapply(years, function(year) {
join_and_fill(grouped_table,
files_list[[as.character(year)]],
as.character(year))
})
View(grouped_table)
View(grouped_table)
grouped_table[["2008"]][["crb_mc_enrollees"]]
grouped_table[["2008"]][["med_enr_pct"]]
grouped_table2 <- grouped_table %>%
unlist()
gt <- do.call(rbind, grouped_table)
gt <- bind_rows(grouped_table)
View(gt)
getwd()
saveRDS(gt, file = paste0(path, "full_table_with_proportions.rds"))
