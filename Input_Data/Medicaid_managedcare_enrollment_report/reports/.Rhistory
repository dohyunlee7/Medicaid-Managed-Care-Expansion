)
View(mmc_entity_2008_df)
# Get page where the table lives
mmc_entity_2008_df <- process_mmc_entity_data(
pdf_text = mmc_entity_2008,
row_remove = c(1:3),
col_remove = 10,
new_col_names = c("state", "hio", "commercial_mco", "medicaid_only_mco",
"pccm", "pihp", "pahp", "pace", "other")
)
View(mmc_entity_2008_df)
# Get page where the table lives
mmc_entity_2008_df <- process_mmc_entity_data(
pdf_text = mmc_entity_2008,
row_remove = c(1:3, 26:29, 57:60),
col_remove = 10,
new_col_names = c("state", "hio", "commercial_mco", "medicaid_only_mco",
"pccm", "pihp", "pahp", "pace", "other")
)
View(mmc_entity_2008_df)
View(mmc_entity_2008_df)
mmc_entity_2008 <- pdf_text("2008_medicaid_managed_care_reports/2008_mmc_entity_enrollment.pdf")
# Get page where the table lives
mmc_entity_2008_df <- process_mmc_entity_data(
pdf_text = mmc_entity_2008,
row_remove = c(1:3, 26:29, 57:60),
col_remove = 10,
new_col_names = c("state", "hio", "commercial_mco", "medicaid_only_mco",
"pccm", "pihp", "pahp", "pace", "other")
)
View(mmc_entity_2008_df)
mmc_2008_df <- process_mmc_data(
pdf_text = mmc_2008,
row_remove = c(1:3, 29:33, 61:64),
col_remove = c(1, 2),
new_col_names = c("state",
"total_med_enr",
"managed_care_enrollment",
"pct_in_managed_care"),
comma_columns = c("total_med_enr",
"managed_care_enrollment"),
percent_columns = c("pct_in_managed_care")
)
View(mmc_2008_df)
# Get page where the table lives
mmc_entity_2008_df <- process_mmc_entity_data(
pdf_text = mmc_entity_2008,
row_remove = c(1:3, 26:29, 57:60),
col_remove = 10,
new_col_names = c("state", "hio", "commercial_mco", "medicaid_only_mco",
"pccm", "pihp", "pahp", "pace", "other")
)
View(mmc_entity_2008_df)
mmc_entity_2008 <- pdf_text("2008_medicaid_managed_care_reports/2008_mmc_entity_enrollment.pdf")
# Get page where the table lives
mmc_entity_2008_df <- process_mmc_entity_data(
pdf_text = mmc_entity_2008,
row_remove = c(1:3, 60:63),
col_remove = 10,
new_col_names = c("state", "hio", "commercial_mco", "medicaid_only_mco",
"pccm", "pihp", "pahp", "pace", "other")
)
View(mmc_entity_2008_df)
# Extracting data for Missouri somehow gets messed up -- manually handle
mmc_entity_2008_df <- mmc_entity_2008_df[-grep("Missour|^$",
mmc_entity_2008_df$state), ]
mmc_entity_2008_df$state <- str_to_title(mmc_2008_df$state)
mmc_2008_full <- left_join(mmc_2008_df, mmc_entity_2008_df, by = "state")
missouri <- data.frame(
state = "Missouri",
total_med_enr = 833112,
managed_care_enrollment = 810828,
pct_in_managed_care = 0.9733,
hio = 0,
commercial_mco = 0,
medicaid_only_mco = 345868,
pccm = 0,
pihp = 0,
pahp = 464764,
pace = 196,
other = 0
)
# Append manually handled dataframe for Missouri onto the main working table
mmc_2008_full <- rbind(mmc_entity_2008_df, missouri)
mmc_2008_full <- mmc_2008_full[order(mmc_2008_full$state), ]
# Append manually handled dataframe for Missouri onto the main working table
mmc_2008_full <- rbind(mmc_entity_2008_df, missouri)
View(mmc_2008_full)
# Append manually handled dataframe for Missouri onto the main working table
mmc_2008_full <- rbind(mmc_entity_2008_df, missouri)
View(mmc_entity_2008_df)
mmc_entity_2008_df$state <- str_to_title(mmc_2008_df$state)
mmc_2008_full <- left_join(mmc_2008_df, mmc_entity_2008_df, by = "state")
missouri <- data.frame(
state = "Missouri",
total_med_enr = 833112,
managed_care_enrollment = 810828,
pct_in_managed_care = 0.9733,
hio = 0,
commercial_mco = 0,
medicaid_only_mco = 345868,
pccm = 0,
pihp = 0,
pahp = 464764,
pace = 196,
other = 0
)
# Append manually handled dataframe for Missouri onto the main working table
mmc_2008_full <- rbind(mmc_entity_2008_df, missouri)
View(mmc_2008_full)
# Append manually handled dataframe for Missouri onto the main working table
mmc_2008_full <- rbind(mmc_2008_full, missouri)
mmc_2008_full <- mmc_2008_full[order(mmc_2008_full$state), ]
mmc_2008_full$state <- gsub("Dist. Of Columbia",
"District of Columbia",
mmc_2008_full$state)
View(mmc_2008_full)
mmc_2010 <- pdf_text(pdf_path)
# Change path depending on file
pdf_path <- file.path("D:", "Groups", "YSPH-HPM-Ndumele", "Networks", "Dohyun",
"medicaid_privatization_exp", "Input_Data",
"Medicaid_managedcare_enrollment_report",
"MMC Enrollment Report 2010 Complete Program Summary.pdf")
mmc_2010 <- pdf_text(pdf_path)
# Change path depending on file
setwd(file.path("D:", "Groups", "YSPH-HPM-Ndumele", "Networks", "Dohyun",
"medicaid_privatization_exp", "Input_Data",
"Medicaid_managedcare_enrollment_report", "reports"))
mmc_2010 <- pdf_text("MMC Enrollment Report 2010 Complete Program Summary.pdf")
mmc_2010 <- pdf_text("MMC Enrollment Report 2010 Complete Program Summary.pdf")
mmc_2010_text <- mmc_2010[56]
# Process total Medicaid and managed care enrollment data
mmc_2008_df <- process_mmc_data(
pdf_text = mmc_2010_text,
row_remove = c(1:3, 57:61),
col_remove = c(1, 2),
new_col_names = c("state",
"total_med_enr",
"managed_care_enrollment",
"pct_in_managed_care"),
comma_columns = c("total_med_enr",
"managed_care_enrollment"),
percent_columns = c("pct_in_managed_care")
)
# Process total Medicaid and managed care enrollment data
mmc_2010_df <- process_mmc_data(
pdf_text = mmc_2010_text,
row_remove = c(1:3, 57:61),
col_remove = c(1, 2),
new_col_names = c("state",
"total_med_enr",
"managed_care_enrollment",
"pct_in_managed_care"),
comma_columns = c("total_med_enr",
"managed_care_enrollment"),
percent_columns = c("pct_in_managed_care")
)
View(mmc_2010_df)
mmc_entity_2010_df <- process_mmc_entity_data(
pdf_text = mmc_entity_2010_text,
row_remove = c(1:3, 57:61),
col_remove = 10,
new_col_names = c("state", "hio", "commercial_mco", "medicaid_only_mco",
"pccm", "pihp", "pahp", "pace", "other")
)
mmc_entity_2010_text <- mmc_2010[57]
mmc_entity_2010_df <- process_mmc_entity_data(
pdf_text = mmc_entity_2010_text,
row_remove = c(1:3, 57:61),
col_remove = 10,
new_col_names = c("state", "hio", "commercial_mco", "medicaid_only_mco",
"pccm", "pihp", "pahp", "pace", "other")
)
View(mmc_entity_2010_df)
# Convert columns 2-9 to numeric
mmc_entity_2010_df <- mmc_entity_2010_df %>%
mutate(across(2:9, ~as.numeric(.)))
# Change naming for DC
mmc_entity_2010_df$state <- str_to_title(mmc_entity_2010_df$state)
View(mmc_entity_2010_df)
mmc_entity_2010_df$state <- gsub("Dist Of Columbia",
"District Of Columbia",
mmc_entity_2010_df$state)
View(mmc_entity_2010_df)
# Join MMC enrollment data and MMC entity enrollment data
mmc_2010 <- left_join(mmc_2010_enr, mmc_entity_2010_df, by = "state")
# Join MMC enrollment data and MMC entity enrollment data
mmc_2010 <- left_join(mmc_2010_df, mmc_entity_2010_df, by = "state")
mmc_2010$state <- gsub("District Of Columbia",
"District of Columbia",
mmc_2010$state)
View(mmc_2010)
# Read in files with MMC population by state
dir_path <- paste0(path,
file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"by_program_pop_from_report"))
### Read 1997-2023 data from here ###
temp <- readRDS(paste0(path, "/Temp/fmr_1997_2023.rds"))
# Read in files with MMC population by state
dir_path <- paste0(path,
file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"by_program_pop_from_report"))
# Get vector of years we have for MC enrollment from report PDFs
years <- setdiff(2006:2022, c(2007, 2012))
# Get vector of file names and use apply function to read in files in one line
file_names <- paste0(dir_path, "/data_", years, ".csv")
data_list <- lapply(file_names, read_csv)
names(data_list) <- years
# Define standardized name for different spellings of the same variables
column_mapping <- list(
total_med_enr = c("total_med_enr",
"total_medicaid_enrollment",
"total_medicaid_enrollees"),
comprehensive_mco_enr = c("comp_mco",
"comprehensive_mco_with_or_without_mltss"),
medicaid_only_mco = c("medicaid_only_mco",
"med_only_mco")
)
# Apply the standardization
new_data_list <- lapply(data_list, function(df) {
df <- standardize_columns(df, column_mapping)
df %>%
select(state, everything())
})
# Define territories in a character vector (for omission)
territories <- c("Virgin Islands",
"Puerto Rico",
"American Samoa",
"American Samoa3",
"Guam",
"Northern Mariana Islands",
"TOTALS")
# Omit territories in every sublist
clean_new_data_list <- lapply(new_data_list, function(df) {
df %>%
filter(!state %in% territories)
})
# Remove dupes in 2017 sublist
data_list[["2017"]] <- data_list[["2017"]] %>%
distinct(state, .keep_all = TRUE)
# Clean up formatting with regex
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(state = gsub("[0-9]+$", "", state)) %>%
# Remove commas and convert to numeric
mutate(across(-state, ~ as.numeric(gsub(",", "", .)))) %>%
# Replace "--" with NA
mutate(across(-state, ~ ifelse(. == "--", NA, .)))
})
# Add empty column for Comprehensive MCO for 2008-2011 for merging
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
df <- clean_new_data_list[[year]]
# Add 'comprehensive_mco_enr' column for years 2008-2011
if (as.numeric(year) %in% 2008:2011) {
df$comprehensive_mco_enr <- NA  # Add empty column
}
return(df)
})
# Create variable Any MCO Enrollment:
# Any MCO = Comprehensive MCO + PCCM + PCCM Entity (if exists) + MLTSS + Other
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(imputed_any_mco_enr = rowSums(select(.,
comprehensive_mco_enr,
pccm,
dplyr::contains("pccm_entity"),
any_of(c("mltss", "mltss_only")),
other),
na.rm = TRUE))
})
# Clean up formatting with regex
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(state = gsub("[0-9]+$", "", state)) %>%
# Remove commas and convert to numeric
mutate(across(-state, ~ as.numeric(gsub(",", "", .)))) %>%
# Replace "--" with NA
mutate(across(-state, ~ ifelse(. == "--", NA, .)))
})
# Add empty column for Comprehensive MCO for 2008-2011 for merging
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
df <- clean_new_data_list[[year]]
# Add 'comprehensive_mco_enr' column for years 2008-2011
if (as.numeric(year) %in% 2008:2011) {
df$comprehensive_mco_enr <- NA  # Add empty column
}
return(df)
})
# Create variable Any MCO Enrollment:
# Any MCO = Comprehensive MCO + PCCM + PCCM Entity (if exists) + MLTSS + Other
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(imputed_any_mco_enr = rowSums(select(.,
comprehensive_mco_enr,
pccm,
dplyr::contains("pccm_entity"),
any_of(c("mltss", "mltss_only")),
other),
na.rm = TRUE))
})
# Reassign list names
names(clean_new_data_list) <- years
# Add empty column for Comprehensive MCO for 2008-2011 for merging
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
df <- clean_new_data_list[[year]]
# Add 'comprehensive_mco_enr' column for years 2008-2011
if (as.numeric(year) %in% 2006:2011) {
df$comprehensive_mco_enr <- NA  # Add empty column
}
return(df)
})
# Create variable Any MCO Enrollment:
# Any MCO = Comprehensive MCO + PCCM + PCCM Entity (if exists) + MLTSS + Other
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(imputed_any_mco_enr = rowSums(select(.,
comprehensive_mco_enr,
pccm,
dplyr::contains("pccm_entity"),
any_of(c("mltss", "mltss_only")),
other),
na.rm = TRUE))
})
# Reassign list names
names(clean_new_data_list) <- years
# Add year variable for each sublist before collapsing
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
clean_new_data_list[[year]] %>%
mutate(year = as.numeric(year))
})
# Rename lists
names(clean_new_data_list) <- years
# Add empty column for Comprehensive MCO for 2008-2011 for merging
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
df <- clean_new_data_list[[year]]
# Add 'comprehensive_mco_enr' column for years 2008-2011
if (as.numeric(year) %in% setdiff(2006:2011, 2007)) {
df$comprehensive_mco_enr <- NA  # Add empty column
}
return(df)
})
# Create variable Any MCO Enrollment:
# Any MCO = Comprehensive MCO + PCCM + PCCM Entity (if exists) + MLTSS + Other
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(imputed_any_mco_enr = rowSums(select(.,
comprehensive_mco_enr,
pccm,
dplyr::contains("pccm_entity"),
any_of(c("mltss", "mltss_only")),
other),
na.rm = TRUE))
})
# Reassign list names
names(clean_new_data_list) <- years
names(clean_new_data_list)
years
length(years)
# Add year variable for each sublist before collapsing
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
clean_new_data_list[[year]] %>%
mutate(year = as.numeric(year))
})
### Read 1997-2023 data from here ###
temp <- readRDS(paste0(path, "/Temp/fmr_1997_2023.rds"))
# Read in files with MMC population by state
dir_path <- paste0(path,
file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"by_program_pop_from_report"))
# Get vector of years we have for MC enrollment from report PDFs
years <- setdiff(2006:2022, c(2007, 2012))
# Get vector of file names and use apply function to read in files in one line
file_names <- paste0(dir_path, "/data_", years, ".csv")
data_list <- lapply(file_names, read_csv)
names(data_list) <- years
# Define standardized name for different spellings of the same variables
column_mapping <- list(
total_med_enr = c("total_med_enr",
"total_medicaid_enrollment",
"total_medicaid_enrollees"),
comprehensive_mco_enr = c("comp_mco",
"comprehensive_mco_with_or_without_mltss"),
medicaid_only_mco = c("medicaid_only_mco",
"med_only_mco")
)
# Apply the standardization
new_data_list <- lapply(data_list, function(df) {
df <- standardize_columns(df, column_mapping)
df %>%
select(state, everything())
})
View(new_data_list)
# Define territories in a character vector (for omission)
territories <- c("Virgin Islands",
"Puerto Rico",
"American Samoa",
"American Samoa3",
"Guam",
"Northern Mariana Islands",
"TOTALS")
# Omit territories in every sublist
clean_new_data_list <- lapply(new_data_list, function(df) {
df %>%
filter(!state %in% territories)
})
# Remove dupes in 2017 sublist
data_list[["2017"]] <- data_list[["2017"]] %>%
distinct(state, .keep_all = TRUE)
# Clean up formatting with regex
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(state = gsub("[0-9]+$", "", state)) %>%
# Remove commas and convert to numeric
mutate(across(-state, ~ as.numeric(gsub(",", "", .)))) %>%
# Replace "--" with NA
mutate(across(-state, ~ ifelse(. == "--", NA, .)))
})
View(clean_new_data_list)
# Add empty column for Comprehensive MCO for 2008-2011 for merging
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
df <- clean_new_data_list[[year]]
# Add 'comprehensive_mco_enr' column for years 2008-2011
if (as.numeric(year) %in% setdiff(2006:2011, 2007)) {
df$comprehensive_mco_enr <- NA  # Add empty column
}
return(df)
})
# Clean up formatting with regex
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(state = gsub("[0-9]+$", "", state)) %>%
# Remove commas and convert to numeric
mutate(across(-state, ~ as.numeric(gsub(",", "", .)))) %>%
# Replace "--" with NA
mutate(across(-state, ~ ifelse(. == "--", NA, .)))
})
# Add empty column for Comprehensive MCO for 2008-2011 for merging
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
df <- clean_new_data_list[[year]]
# Add 'comprehensive_mco_enr' column for years 2008-2011
if (as.numeric(year) %in% setdiff(2006:2011, 2007)) {
df$comprehensive_mco_enr <- NA  # Add empty column
}
return(df)
})
# Omit territories in every sublist
clean_new_data_list <- lapply(new_data_list, function(df) {
df %>%
filter(!state %in% territories)
})
# Remove dupes in 2017 sublist
data_list[["2017"]] <- data_list[["2017"]] %>%
distinct(state, .keep_all = TRUE)
# Clean up formatting with regex
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(state = gsub("[0-9]+$", "", state)) %>%
# Remove commas and convert to numeric
mutate(across(-state, ~ as.numeric(gsub(",", "", .)))) %>%
# Replace "--" with NA
mutate(across(-state, ~ ifelse(. == "--", NA, .)))
})
View(clean_new_data_list)
setdiff(2006:2011, 2007)
# Add empty column for Comprehensive MCO for 2008-2011 for merging
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
df <- clean_new_data_list[[year]]
# Add 'comprehensive_mco_enr' column for years 2008-2011
if (as.numeric(year) %in% setdiff(2006:2011, 2007)) {
df$comprehensive_mco_enr <- NA  # Add empty column
}
return(df)
})
View(clean_new_data_list)
# Create variable Any MCO Enrollment:
# Any MCO = Comprehensive MCO + PCCM + PCCM Entity (if exists) + MLTSS + Other
clean_new_data_list <- lapply(clean_new_data_list, function(df) {
df %>%
mutate(imputed_any_mco_enr = rowSums(select(.,
comprehensive_mco_enr,
pccm,
dplyr::contains("pccm_entity"),
any_of(c("mltss", "mltss_only")),
other),
na.rm = TRUE))
})
View(clean_new_data_list)
# Reassign list names
names(clean_new_data_list) <- years
# Add year variable for each sublist before collapsing
clean_new_data_list <- lapply(names(clean_new_data_list), function(year) {
clean_new_data_list[[year]] %>%
mutate(year = as.numeric(year))
})
# Rename lists
names(clean_new_data_list) <- years
View(clean_new_data_list)
# Collapse list of dataframes into one big dataframe
data_df <- do.call(bind_rows, clean_new_data_list)
View(data_df)
# Standardize DC naming scheme
data_df$state <- gsub("(District of Columbia|Dist\\. of Columbia)",
"District of Columbia",
data_df$state,
ignore.case = TRUE)
# Merge on enrollment data onto spending data
data <- left_join(temp, data_df, by = c("tag" = "state", "year"))
# Lower case variable names
names(data) <- tolower(names(data))
