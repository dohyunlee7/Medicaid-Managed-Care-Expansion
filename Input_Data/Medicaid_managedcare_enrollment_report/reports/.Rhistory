new_merged_data <- readRDS(paste0(path, "/Temp/new_merged_panel.rds"))
# Read FY Medicaid enrollment (potentially enrolled on June 30 of year)
fymcdben <- read_dta(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"external",
"fymcdben.dta")))
# Read Medicaid enrollment (potentially "ever enrolled in the year")
mcdben <- read_dta(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"external",
"mcdben.dta")))
enrollment_data <- left_join(fymcdben, mcdben, by = c("state", "year"))
# Extend state.abb and state.name with DC name
state.abb <- c(state.abb, "DC", "XX")
state.name <- c(state.name, "District of Columbia", "National Total")
# Match state abbreviations to state names
enrollment_data$state <- state.name[match(enrollment_data$state, state.abb)]
# Omit 1990 data and calculate the 1996 ratio
enrollment_data <- enrollment_data %>%
filter(year != 1990)
# Filter data for 1996 only, calculate ratio for the two enrollments for 1996
enrollment_1996 <- enrollment_data %>%
filter(year == 1996) %>%
mutate(mcd96rat = mcdben / fymcdben) %>%
select(state, mcd96rat)
# Filter for 1991-1995
est_91_95_enrollment <- enrollment_data %>%
filter(year %in% 1991:1995)
# Join 1991-1995 enrollment with the 1996 ratio
est_91_95_enrollment <- left_join(est_91_95_enrollment,
enrollment_1996,
by = "state")
# Multiply FY enrollment by the ratio
est_91_95_enrollment <- est_91_95_enrollment %>%
mutate(mcdben = fymcdben * mcd96rat)
# Select variables and rename enrollment variable
est_91_95_enrollment <- est_91_95_enrollment %>%
select(state, year, mcdben) %>%
rename(total_med_enr = mcdben)
# Append total Medicaid enrollment from 1991-1995 to panel
new_merged_data <- coalesce_join(
main_data = new_merged_data,
join_data = est_91_95_enrollment,
by_cols = c("state", "year"),
coalesce_cols = c("total_med_enr"),
reorder_cols = reorder_cols
)
new_merged_data$total_med_enr <- as.numeric(new_merged_data$total_med_enr)
saveRDS(new_merged_data, file = paste0(path, "/Temp/new_merged_panel.rds"))
# Read managed care enrollment from 1991-1995
mc91_05 <- read_dta(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"external",
"mc91_05.dta")))
mc91_05$state <- state.name[match(mc91_05$state, state.abb)]
new_mc91_05 <- mc91_05 %>%
mutate(undup_tot = as.numeric(undup_tot)) %>%
select(state, year, undup_tot) %>%
filter(year %in% 1991:1994)
# Join unduplicated totals for managed care enrollment from 1991-1994
new_merged_data <- new_merged_data %>%
left_join(new_mc91_05, by = c("state", "year")) %>%
mutate(managed_care_enrollment = coalesce(managed_care_enrollment, undup_tot))
# Calculate percent in managed care
new_merged_data <- new_merged_data %>%
mutate(pct_in_managed_care = managed_care_enrollment / total_med_enr)
# Fill Comp. Risk-Based enrollment
new_merged_data <- new_merged_data %>%
mutate(crb_mc_enrollees = replace_na(crb_mc_enrollees, 0))
saveRDS(new_merged_data, file = paste0(path, "/Temp/new_merged_panel.rds"))
### ------------- Append Managed Care enrollment for 2011 - 2022 ----------- ###
new_merged_data <- readRDS(paste0(path, "/Temp/new_merged_panel.rds"))
any_mc_15_22 <- read_csv(paste0(path, "/Temp/any_mmc_2015_2022.csv"))
new_merged_data2 <- coalesce_join(main_data = new_merged_data,
join_data = any_mc_15_22,
by_cols = c("state", "year"),
coalesce_cols = c("managed_care_enrollment"),
reorder_cols = reorder_cols)
# Impute 2007 and 2012 managed care enrollment using average between
# 2006-2008 and 2011-2013
new_merged_data2 <- new_merged_data2 %>%
group_by(state) %>%
mutate(managed_care_enrollment = case_when(
year == 2007 ~ (managed_care_enrollment[year == 2006] + managed_care_enrollment[year == 2008]) / 2,
year == 2012 ~ (managed_care_enrollment[year == 2011] + managed_care_enrollment[year == 2013]) / 2,
TRUE ~ managed_care_enrollment
)) %>%
ungroup()
# Fill in NAs with 0's
new_merged_data2$managed_care_enrollment <- ifelse(is.na(new_merged_data2$managed_care_enrollment),
0,
new_merged_data2$managed_care_enrollment)
# Omit 2023 for now -- enrollment report not published yet
new_merged_data2 <- new_merged_data2 %>%
filter(year != 2023)
new_merged_data2 <- new_merged_data2 %>%
mutate(pct_in_managed_care = managed_care_enrollment / total_med_enr,
pct_in_comp_mco = crb_mc_enrollees / total_med_enr)
saveRDS(new_merged_data2, file = paste0(path, "/Temp/new_merged_panel2.rds"))
### ---------- Integrate mandate data and county-level Census data --------- ###
# Read in county level mandate level
mandate <- read_dta(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"external",
"uimmc.dta")))
# Read in county-level Census population data for 1990-2023
census_1990 <- read_excel(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"census",
"census1990_2000.xlsx")))
census_2000 <- read_csv(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"census",
"co-est00int-tot.csv")))
census_2010 <- read_csv(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"census",
"co-est2019-alldata.csv")))
census_2020 <- read_excel(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"census",
"co-est2023-pop.xlsx")))
census_1990 <- census_1990[, -(14:18)]
names(census_1990) <- tolower(names(census_1990))
# Add 0 in front of the FIPS codes that are supposed to have 0's in front
census_1990$fipscode <- gsub("^([0-9]{4})$", "0\\1", census_1990$fipscode)
census_1990 <- census_1990 %>%
mutate(stname = ifelse(ctyname %in% state.name, ctyname, NA)) %>%
fill(stname, .direction = "down")
census_1990 <- census_1990 %>%
select(fipscode,
ctyname,
stname,
estimatesbase1990,
popestimate1990,
popestimate1991,
popestimate1992,
popestimate1993,
popestimate1994,
popestimate1995,
popestimate1996,
popestimate1997,
popestimate1998,
popestimate1999)
census_1990$ctyname <- tolower(census_1990$ctyname)
census_1990$stname <- tolower(census_1990$stname)
census_1990$ctyname <- gsub("-", " ", census_1990$ctyname)
census_1990 <- census_1990 %>%
filter(!is.na(ctyname))
# Lower case variable names
names(census_2000) <- tolower(names(census_2000))
# Select variables
# census_2000 <- census_2000 %>%
#   select(stname, ctyname, popestimate2000)
census_2000$ctyname <- tolower(census_2000$ctyname)
census_2000$stname <- tolower(census_2000$stname)
census_2000$ctyname <- gsub("-", " ", census_2000$ctyname)
census_2000 <- census_2000 %>%
select(ctyname,
stname,
popestimate2000,
popestimate2001,
popestimate2002,
popestimate2003,
popestimate2004,
popestimate2005,
popestimate2006,
popestimate2007,
popestimate2008,
popestimate2009)
# Manipulating 2010-2019 population
names(census_2010) <- tolower(names(census_2010))
# Error reading because of special character (tilde n)
census_2010[census_2010$state == "35" & census_2010$county == "013", ]$ctyname <-
"Dona Ana County"
census_2010$ctyname <- tolower(census_2010$ctyname)
census_2010$stname <- tolower(census_2010$stname)
census_2010$ctyname <- gsub("-", " ", census_2010$ctyname)
census_2010 <- census_2010 %>%
select(stname,
ctyname,
popestimate2010,
popestimate2011,
popestimate2012,
popestimate2013,
popestimate2014,
popestimate2015,
popestimate2016,
popestimate2017,
popestimate2018,
popestimate2019)
# Joining
census_data <- left_join(census_1990, census_2000, by = c("stname", "ctyname"))
census_data <- left_join(census_data, census_2010, by = c("stname", "ctyname"))
# Adding on 2020-2023 county populations
census_2020$ctyname <- tolower(census_2020$ctyname)
census_2020$stname <- tolower(census_2020$stname)
census_2020$ctyname <- gsub("-", " ", census_2020$ctyname)
census_2020 <- census_2020 %>%
select(ctyname, stname, popestimate2020, popestimate2021, popestimate2022)
census_data <- left_join(census_data, census_2020, by = c("stname", "ctyname"))
# Add " county" at the end of string if it doesn't contain "State of" or DC
mandate$county97 <- ifelse(
grepl("State of|DISTRICT OF COLUMBIA", mandate$county97),
mandate$county97,
paste0(mandate$county97, " county")
)
# Lower case county and state names
mandate$county97 <- tolower(mandate$county97)
mandate$stname97 <- tolower(mandate$stname97)
# Louisiana's counties are called parishes
mandate$county97 <- ifelse(
mandate$stname97 == "louisiana",
gsub(" county", " parish", mandate$county97),
mandate$county97
)
# Omit the "State of" tag in front of state names
mandate$county97 <- gsub("state of ", "", mandate$county97)
# Extend mandates for 2002 and 2003
new_rows <- mandate %>%
group_by(stname97, county97) %>%
filter(year == 2001) %>%
mutate(year = list(2002:2022)) %>%
unnest(year) %>%
bind_rows(mandate) %>%
arrange(stname97, county97, year)
mandate_pop <- left_join(census_data,
new_rows,
by = c("fipscode" = "fips97",
"stname" = "stname97",
"ctyname" = "county97"))
# Remove Yellowstone National Park, which likely doesn't have a human population
mandate_pop <- mandate_pop %>%
filter(fipscode != 30111) %>%
filter(year != 1990)%>%
select(-estimatesbase1990, -popestimate1990)
# Create dummy for inverse of "no MMC" (better readability)
mandate_pop$mmc <- mandate_pop$nommc - 1
mandate_pop$mmc <- mandate_pop$mmc * -1
# mandate_pop <- mandate_pop %>%
#   mutate(
#     hmom_pop = hmom * popestimate2000,
#     hmov_pop = hmov * popestimate2000,
#     pccmm_pop = pccmm * popestimate2000,
#     pccmv_pop = pccmv * popestimate2000,
#     mmc_pop = mmc * popestimate2000,
#     hmo = ifelse(hmom == 1 | hmov == 1, 1, 0),
#     hmopop = hmo * popestimate2000,
#     pccmm_only_pop = pccmm_only * popestimate2000,
#     onlyvol_pop = onlyvol * popestimate2000,
#     mandhmo_pop = mandhmo * popestimate2000,
#     mixedmand_pop = mixedmand * popestimate2000
#   )
mandate_pop <- mandate_pop %>%
mutate(
popestimate = case_when(
year == 1991 ~ popestimate1991,
year == 1992 ~ popestimate1992,
year == 1993 ~ popestimate1993,
year == 1994 ~ popestimate1994,
year == 1995 ~ popestimate1995,
year == 1996 ~ popestimate1996,
year == 1997 ~ popestimate1997,
year == 1998 ~ popestimate1998,
year == 1999 ~ popestimate1999,
year == 2000 ~ popestimate2000,
year == 2001 ~ popestimate2001,
year == 2002 ~ popestimate2002,
year == 2003 ~ popestimate2003,
year == 2004 ~ popestimate2004,
year == 2005 ~ popestimate2005,
year == 2006 ~ popestimate2006,
year == 2007 ~ popestimate2007,
year == 2008 ~ popestimate2008,
year == 2009 ~ popestimate2009,
year == 2010 ~ popestimate2010,
year == 2011 ~ popestimate2011,
year == 2012 ~ popestimate2012,
year == 2013 ~ popestimate2013,
year == 2014 ~ popestimate2014,
year == 2015 ~ popestimate2015,
year == 2016 ~ popestimate2016,
year == 2017 ~ popestimate2017,
year == 2018 ~ popestimate2018,
year == 2019 ~ popestimate2019,
year == 2020 ~ popestimate2020,
year == 2021 ~ popestimate2021,
year == 2022 ~ popestimate2022
),
# Apply the multipliers
hmom_pop = hmom * popestimate,
hmov_pop = hmov * popestimate,
pccmm_pop = pccmm * popestimate,
pccmv_pop = pccmv * popestimate,
mmc_pop = mmc * popestimate,
hmo = ifelse(hmom == 1 | hmov == 1, 1, 0),
hmopop = hmo * popestimate,
pccmm_only_pop = pccmm_only * popestimate,
onlyvol_pop = onlyvol * popestimate,
mandhmo_pop = mandhmo * popestimate,
mixedmand_pop = mixedmand * popestimate
)
# Constructing percentages with MMC/HMO mandate Table 1
mp_agg <- mandate_pop %>%
group_by(year) %>%
summarise(
pop = sum(popestimate2000, na.rm = TRUE),
pop_with_pccm_only = sum(pccmm_only_pop, na.rm = TRUE),
pop_with_mandhmo = sum(mandhmo_pop, na.rm = TRUE),
pop_with_mixedmand = sum(mixedmand_pop, na.rm = TRUE),
pct_with_pccm_only = pop_with_pccm_only / pop,
pct_with_mandhmo = pop_with_mandhmo / pop,
pct_with_mixedmand = pop_with_mixedmand / pop
)
# How Tamara constructed the percent residing in county with MMC mandate
mp_agg <- mp_agg %>%
mutate(pct_with_mandate = scales::percent(pct_with_pccm_only +
pct_with_mandhmo +
pct_with_mixedmand,
accuracy = 0.1),
pct_with_mandhmo = scales::percent(pct_with_mandhmo,
accuracy = 0.1)) %>%
select(year, pct_with_mandate, pct_with_mandhmo)
# Constructing percentages with MMC mandate Table 2
mp_agg_tbl2 <- mandate_pop %>%
group_by(stname, year) %>%
summarise(
# Total population
pop = sum(popestimate, na.rm = TRUE),
# Population by different mandate types
pop_with_pccm_only = sum(pccmm_only_pop, na.rm = TRUE),
pop_with_mandhmo = sum(mandhmo_pop, na.rm = TRUE),
pop_with_mixedmand = sum(mixedmand_pop, na.rm = TRUE),
# Percent of different mandate types
pct_with_pccm_only = pop_with_pccm_only / pop,
pct_with_mandhmo = pop_with_mandhmo / pop,
pct_with_mixedmand = pop_with_mixedmand / pop,
# Percent of population in mandatory MMC county
pct_with_mandate = pct_with_pccm_only + pct_with_mandhmo + pct_with_mixedmand
) %>%
select(stname,
year,
pct_with_mandate,
pct_with_mandhmo,
pct_with_pccm_only,
pct_with_mixedmand)
saveRDS(mp_agg_tbl2, file = paste0(path, "/Temp/mandate_pcts_by_st_yr_expanded.rds"))
### ---------------------- Adjust spending for inflation ------------------- ###
library(fredr)
new_merged_data <- readRDS(paste0(path, "/Temp/new_merged_panel.rds"))
# Get API Key from Fed. Reserve
fredr_set_key("8664fb88934dc0a2a037b8c6b153e4e5")
# Fetch annual CPI data for 'CPIAUCSL'
# (Consumer Price Index for All Urban Consumers, All Items)
cpi_data <- fredr(
series_id = "CPIAUCSL",
observation_start = as.Date("1990-01-01"),
observation_end = as.Date("2023-12-31"),
frequency = "a"
)
# Calculate year-over-year percentage change (inflation rate) in CPI
cpi_data <- cpi_data %>%
arrange(date) %>%
mutate(year = as.numeric(format(date, "%Y"))) %>%
rename(cpi = value) %>%
select(year, cpi)
# Join annual CPI to panel
new_merged_data_adj <- left_join(new_merged_data2, cpi_data, by = "year")
cpi_2023 <- cpi_data[cpi_data$year == 2023, ]$cpi
new_merged_data_adj <- new_merged_data_adj %>%
mutate(adj_factor = cpi_2023 / cpi)
new_merged_data_adj <- new_merged_data_adj %>%
mutate(across(29:457, ~. * adj_factor))
saveRDS(new_merged_data_adj, file = paste0(path, "/Temp/new_merged_panel_inflation_adj.rds"))
View(new_merged_data2)
dir_path
### ---------- Append in comprehensive MCO enrollment for 1995-1998 -------- ###
file_names <- paste0(dir_path, "/data_", 1995:1998, ".csv")
data_list <- lapply(file_names, read_csv)
names(data_list) <- years
names(data_list) <- 1995_1998
names(data_list) <- 1995:1998
View(data_list)
crb_95_98 <- do.call(rbind, data_list)
View(crb_95_98)
new_merged_data3 <- new_merged_data2 %>%
left_join(crb_95_98, by = c("state", "year"))
View(new_merged_data3)
new_merged_data3 <- new_merged_data2 %>%
left_join(crb_95_98, by = c("state", "year")) %>%
mutate(crb_mc_enrollees = ifelse(!is.na(crb_mc_enrollees.y),
crb_mc_enrollees.y,
crb_mc_enrollees.x)) %>%
select(-crb_mc_enrollees.x, -crb_mc_enrollees.y)
View(new_merged_data3)
saveRDS(new_merged_data3, file = paste0(path, "/Temp/new_merged_panel3.rds"))
# Read in county level mandate level
mandate <- read_dta(paste0(path, file.path("/Input_Data",
"Medicaid_managedcare_enrollment_report",
"external",
"uimmc.dta")))
path
new_merged_data <- readRDS(paste0(path, "/Temp/new_merged_panel3.rds"))
# Get the 663 observations
new_merged_data <- new_merged_data %>%
filter(state != "Puerto Rico",
year <= 2003)
new_merged_data3 <- new_merged_data3 %>%
mutate(pct_in_comp_mco = crb_mc_enrollees / total_med_enr)
saveRDS(new_merged_data3, file = paste0(path, "/Temp/new_merged_panel3.rds"))
new_merged_data <- readRDS(paste0(path, "/Temp/new_merged_panel3.rds"))
### ----------------------- Jump in Prop. of MMC --------------------------- ###
new_merged_data <- new_merged_data %>%
mutate(pct_in_comp_mco = ifelse(pct_in_comp_mco > 1,
1,
pct_in_comp_mco))
unique_states <- unique(new_merged_data$state)
output_dir <- file.path(path, "Output", "state_plots")
# Calculate the magnitude of the jump in any MMC enrollment
jumps <- new_merged_data %>%
group_by(state) %>%
arrange(year, .by_group = TRUE) %>%
mutate(
mmc_jump = pct_in_comp_mco - lag(pct_in_comp_mco),
mmc_lag = lag(pct_in_comp_mco)
) %>%
filter(!is.na(mmc_jump)) %>%
summarise(
max_jump = max(mmc_jump, na.rm = TRUE),
treatment_year = ifelse(max_jump > 0,
year[which.max(mmc_jump)],
NA)
) %>%
ungroup()
View(jumps)
new_merged_data_temp <- new_merged_data %>%
left_join(jumps, by = "state")
saveRDS(jumps, file = paste0(path, "/Temp/jumps.rds"))
# Calculate increase in mandate for treatment year
mandates2 <- left_join(mandates, jumps, by = c("stname" = "state"))
# Calculate increase in mandate for treatment year
mandates2 <- left_join(mandates, jumps, by = c("stname" = "state"))
mandates <- readRDS(paste0(path, "/Temp/mandate_pcts_by_st_yr_expanded.rds"))
# Calculate increase in mandate for treatment year
mandates2 <- left_join(mandates, jumps, by = c("stname" = "state"))
mandates3 <- mandates2 %>% select(-max_jump, -treatment_year)
# Join state-year mandate data to panel
new_merged_data_temp <- new_merged_data_temp %>%
left_join(mandates3, by = c("state" = "stname", "year"))
# Keep states whose treatment years aren't NA or past 2001 (Mandates are only
# present from 1991 - 2001)
# Calculate the change in mandate percentage where the treatment year is defined
res <- mandates2 %>%
filter(!is.na(treatment_year) & treatment_year <= 2001) %>%
group_by(stname) %>%
summarise(treatment_year = unique(treatment_year),
pct_with_mandate_change = pct_with_mandate[year == treatment_year] -
pct_with_mandate[year == (treatment_year - 1)]) %>%
ungroup()
View(new_merged_data2)
View(new_merged_data_temp)
# Keep states whose treatment years aren't NA or past 2001 (Mandates are only
# present from 1991 - 2001)
# Calculate the change in mandate percentage where the treatment year is defined
res <- mandates2 %>%
filter(!is.na(treatment_year) & treatment_year <= 2001) %>%
group_by(stname) %>%
summarise(treatment_year = unique(treatment_year),
pct_with_mandate_change = pct_with_mandate[year == treatment_year] -
pct_with_mandate[year == (treatment_year - 1)]) %>%
ungroup()
# Keep states whose treatment years aren't NA or past 2001 (Mandates are only
# present from 1991 - 2001)
# Calculate the change in mandate percentage where the treatment year is defined
res <- mandates2 %>%
filter(!is.na(treatment_year) & treatment_year <= 2001) %>%
group_by(stname) %>%
reframe(treatment_year = unique(treatment_year),
pct_with_mandate_change = pct_with_mandate[year == treatment_year] -
pct_with_mandate[year == (treatment_year - 1)]) %>%
ungroup()
# Keep states whose treatment years aren't NA or past 2001 (Mandates are only
# present from 1991 - 2001)
# Calculate the change in mandate percentage where the treatment year is defined
res <- mandates2 %>%
filter(!is.na(treatment_year) & treatment_year <= 2001) %>%
group_by(stname) %>%
reframe(treatment_year = unique(treatment_year),
pct_with_mandate_change = pct_with_mandate[year == treatment_year] -
pct_with_mandate[year == (treatment_year - 1)]) %>%
ungroup()
View(mandates2)
# Keep states whose treatment years aren't NA or past 2001 (Mandates are only
# present from 1991 - 2001)
# Calculate the change in mandate percentage where the treatment year is defined
res <- mandates2 %>%
filter(!is.na(treatment_year) & treatment_year <= 2001) %>%
group_by(stname) %>%
reframe(treatment_year = unique(treatment_year),
pct_with_mandate_change = pct_with_mandate[year == treatment_year] -
pct_with_mandate[year == (treatment_year - 1)]) %>%
ungroup()
# Keep states whose treatment years aren't NA or past 2001 (Mandates are only
# present from 1991 - 2001)
# Calculate the change in mandate percentage where the treatment year is defined
res <- mandates2 %>%
filter(!is.na(treatment_year) & treatment_year <= 2001) %>%
group_by(stname) %>%
summarise(treatment_year = unique(treatment_year),
pct_with_mandate_change = pct_with_mandate[year == treatment_year] -
pct_with_mandate[year == (treatment_year - 1)]) %>%
ungroup()
