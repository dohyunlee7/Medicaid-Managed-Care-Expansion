pre_trend_fit <- lm(estimate ~ t, data = pre_trend)
predicted_df <- data.frame(
t = seq(-10, 10, by = 0.1),
estimate = predict(pre_trend_fit, newdata = data.frame(t = seq(-10, 10, by = 0.1)))
)
## estimate difference
formula_str2 <- paste0(
outcome, " ~ ",
"`center_time_0` + ",
"`center_time_1` + `center_time_2` + `center_time_3` + `center_time_4` + ",
"`center_time_5` + `center_time_6` + `center_time_7` + `center_time_8` + ",
"`center_time_9` + `center_time_10` + ",
"center_time | ",
"as.factor(state) + as.character(year) ",
sep = ""
)
formula2 <- as.formula(formula_str2)
mod_d <- lfe::felm(formula2,
data = subset(cohort_data, center_time >= -10 & center_time <= 10),
exactDOF = TRUE)
es_d2 <- prep_es_trend_10(mod_d)
es_d2 <- es_d2 %>%
mutate(sig = ifelse((lower > 0 | upper < 0), 1, 0))
# Event study plot
p1 <- ggplot(data = es_d, aes(x = t, y = estimate, group = 1))+
geom_point(size= 3, color = "gray26")+
geom_errorbar(aes(ymin = lower, ymax = upper),
width=.1,
linewidth = 0.8,
color = "gray26") +
geom_hline(yintercept = 0,
linetype = "dashed",
linewidth = 1,
color = "firebrick4")+
scale_x_continuous(breaks = round(seq(-10, 10, by = 1),1),
limits = c(-10.5, 10.5))+
# scale_y_continuous(breaks = round(seq(-0.2, 0.2, by = 0.1), 1),
#                  limits = c(-0.2, 0.2))+
labs(x = "Relative Time", y = "Estimate",
title = paste0(outcome_name, " - ", cohort_interval))+
theme(plot.title = element_text(hjust = 0.5, size = 20),
legend.position = "none")+
geom_text(data = es_d2 %>% filter(t >= 0 & t <= 10),
aes(x = t, y = 0.5*max(es_d2$upper), label = coef_star, angle = 45),
color = "blue", size = 4, vjust = -0.3)+
geom_line(data = predicted_df, aes(x = t, y = estimate),
color = "blue", linetype = "dashed", linewidth = 1.2)
# annotate("text", x = 8, y = text_pos, label = comb_est, size = 5)
p2 <- ggplot(data = es_d2, aes(x = t, y = estimate)) +
geom_point(size = 3, color = "black") +  # Black dots for estimates
geom_errorbar(aes(ymin = lower, ymax = upper),
width = 0.2,
linewidth = 0.8,
color = "black") +  # Error bars
geom_line(color = "black", linewidth = 1) +  # Line connecting estimates
geom_hline(yintercept = 0, linetype = "dashed", color = "firebrick4", linewidth = 1) +  # Reference line at y = 0
scale_x_continuous(breaks = seq(-20, 20, by = 1)) +
# scale_y_continuous(breaks = seq(-0.5,1,0.1),
#                    limits = c(-0.5, 1.1))+
labs(x = "Relative Time",
y = "Estimate",
title = paste0(outcome_name, " - ", cohort_interval)) +
theme(plot.title = element_text(hjust = 0.5, size = 20),
legend.position="none")
p2
p[[1]] <- p1
p[[2]] <- p2
return(p)
}
cohorts <- c("1991-1995", "1996-2000", "2006-2010", "2011-2015", "2016-2022")
outcomes <- list(
pct_in_comp_mco = "Prop. Comp MCO Enroll",
log_total_spend = "Log(Total Medicaid Spending)",
log_all_medicaid_spending_per_cap = "Log(Total Medicaid Spending per Capita)"
)
# Initialize an empty list to store the plots
plot_list <- list()
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_5_interval", cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
did_graph_trend_10 <- function(data, outcome, outcome_name, cohort_var ,cohort_interval){
p <- list()
cohort_data <- data %>%
filter(!!sym(cohort_var) == cohort_interval)
# Normal event study
formula_str1 <- paste0(
outcome, " ~ ",
"`center_time_-10` + `center_time_-9` + ",
"`center_time_-8` + `center_time_-7` + `center_time_-6` + `center_time_-5` + ",
"`center_time_-4` + `center_time_-3` + `center_time_-2` + `center_time_0` + ",
"`center_time_1` + `center_time_2` + `center_time_3` + `center_time_4` + ",
"`center_time_5` + `center_time_6` + `center_time_7` + `center_time_8` + ",
"`center_time_9` + `center_time_10` | ",
"as.factor(state) + as.character(year) ",
sep = ""
)
formula1 <- as.formula(formula_str1)
mod_d <- lfe::felm(formula1,
data = subset(cohort_data, center_time >= -10 & center_time <= 10),
exactDOF = TRUE)
es_d <- prep_es_10(mod_d)
es_d <- es_d %>%
mutate(sig = ifelse((lower > 0 | upper < 0), 1, 0))
# Pre-trend line
pre_trend <- es_d %>% filter(t < 0)
pre_trend_fit <- lm(estimate ~ t, data = pre_trend)
predicted_df <- data.frame(
t = seq(-10, 10, by = 0.1),
estimate = predict(pre_trend_fit, newdata = data.frame(t = seq(-10, 10, by = 0.1)))
)
## estimate difference
formula_str2 <- paste0(
outcome, " ~ ",
"`center_time_0` + ",
"`center_time_1` + `center_time_2` + `center_time_3` + `center_time_4` + ",
"`center_time_5` + `center_time_6` + `center_time_7` + `center_time_8` + ",
"`center_time_9` + `center_time_10` + ",
"center_time | ",
"as.factor(state) + as.character(year) ",
sep = ""
)
formula2 <- as.formula(formula_str2)
mod_d <- lfe::felm(formula2,
data = subset(cohort_data, center_time >= -10 & center_time <= 10),
exactDOF = TRUE)
es_d2 <- prep_es_trend_10(mod_d)
es_d2 <- es_d2 %>%
mutate(sig = ifelse((lower > 0 | upper < 0), 1, 0))
# Event study plot
p1 <- ggplot(data = es_d, aes(x = t, y = estimate, group = 1))+
geom_point(size= 3, color = "gray26")+
geom_errorbar(aes(ymin = lower, ymax = upper),
width=.1,
linewidth = 0.8,
color = "gray26") +
geom_hline(yintercept = 0,
linetype = "dashed",
linewidth = 1,
color = "firebrick4")+
scale_x_continuous(breaks = round(seq(-10, 10, by = 1),1),
limits = c(-10.5, 10.5))+
# scale_y_continuous(breaks = round(seq(-0.2, 0.2, by = 0.1), 1),
#                  limits = c(-0.2, 0.2))+
labs(x = "Relative Time", y = "Estimate",
title = paste0(outcome_name, " - ", cohort_interval))+
theme(plot.title = element_text(hjust = 0.5, size = 20),
legend.position = "none")+
geom_text(data = es_d2 %>% filter(t >= 0 & t <= 10),
aes(x = t, y = 0.5*max(es_d2$upper), label = coef_star, angle = 45),
color = "blue", size = 4, vjust = -0.3)+
geom_line(data = predicted_df, aes(x = t, y = estimate),
color = "blue", linetype = "dashed", linewidth = 1.2)
# annotate("text", x = 8, y = text_pos, label = comb_est, size = 5)
p2 <- ggplot(data = es_d2, aes(x = t, y = estimate)) +
geom_point(size = 3, color = "black") +  # Black dots for estimates
geom_errorbar(aes(ymin = lower, ymax = upper),
width = 0.2,
linewidth = 0.8,
color = "black") +  # Error bars
geom_line(color = "black", linewidth = 1) +  # Line connecting estimates
geom_hline(yintercept = 0, linetype = "dashed", color = "firebrick4", linewidth = 1) +  # Reference line at y = 0
scale_x_continuous(breaks = seq(-20, 20, by = 1)) +
# scale_y_continuous(breaks = seq(-0.5,1,0.1),
#                    limits = c(-0.5, 1.1))+
labs(x = "Relative Time",
y = "Estimate",
title = paste0(outcome_name, " - ", cohort_interval)) +
theme(plot.title = element_text(hjust = 0.5, size = 20),
legend.position="none")
p2
p[[1]] <- p1
p[[2]] <- p2
return(p)
}
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_5_interval", cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
cohorts2 <- c("1991-2000", "2001-2010", "2011-2022")
outcomes <- list(
pct_in_comp_mco = "Prop. Comp MCO Enroll",
log_total_spend = "Log(Total Medicaid Spending)",
log_all_medicaid_spending_per_cap = "Log(Total Medicaid Spending per Capita)"
)
# Initialize an empty list to store the plots
plot_list <- list()
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts2) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_10_interval",cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
# Define treatment cohorts
assign_cohort_10 <- function(treatment_year) {
case_when(
treatment_year >= 1991 & treatment_year <= 2000 ~ "1991-2000",
treatment_year >= 2001 & treatment_year <= 2010 ~ "2001-2010",
treatment_year >= 2006 & treatment_year <= 2010 ~ "2011-2022",
TRUE ~ "never-treated"  # Default fallback if none of the above match
)
}
# Construct stacked data
# For each treatment year, construct control without treatment within 10/20 years
collect_10 <- list()
collect_20 <- list()
for(i in unique(data_cohorts$treatment_year[data_cohorts$treatment_year != Inf])){
# Get treated state
treated_state <- data_cohorts %>%
filter(treatment_year == i) %>%
mutate(treatment_year_group = i) %>%
mutate(cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
max_year <- max(treated_state$year)
# Get control states within a 10 year (pre and post) from treatment year
control_state_10 <- data_cohorts %>%
filter(treatment_year > i + 10,
year <= i + 10, year >= i - 10) %>%
mutate(treatment_year_group = i,
center_time = 0,
treated = 0,
cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
control_state_20 <- data_cohorts %>%
filter(treatment_year > i + 20,
year <= i + 20, year >= i - 20) %>%
mutate(treatment_year_group = i,
center_time = 0,
treated = 0,
cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
collect_10[[length(collect_10)+1]] <- rbind(treated_state, control_state_10)
collect_20[[length(collect_20)+1]] <- rbind(treated_state, control_state_20)
}
dat_10 <- do.call(rbind, collect_10)
dat_20 <- do.call(rbind, collect_20)
dat_10 <- dat_10 %>% dummy_cols(select_columns = "center_time")
dat_20 <- dat_20 %>% dummy_cols(select_columns = "center_time")
# DID - 10 period
dat <- dat_10
dat <- dat %>%
mutate(log_total_spend = log(total_medicaid))
cohorts2 <- c("1991-2000", "2001-2010", "2011-2022")
outcomes <- list(
pct_in_comp_mco = "Prop. Comp MCO Enroll",
log_total_spend = "Log(Total Medicaid Spending)",
log_all_medicaid_spending_per_cap = "Log(Total Medicaid Spending per Capita)"
)
# Initialize an empty list to store the plots
plot_list <- list()
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts2) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_10_interval", cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts2) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_10_interval", cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
cohorts2 <- c("1991-2000", "2001-2010", "2011-2022")
outcomes <- list(
pct_in_comp_mco = "Prop. Comp MCO Enroll",
log_total_spend = "Log(Total Medicaid Spending)",
log_all_medicaid_spending_per_cap = "Log(Total Medicaid Spending per Capita)"
)
# Initialize an empty list to store the plots
plot_list <- list()
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts2) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_10_interval", cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts2) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_10_interval", cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
# Get treated state
treated_state <- data_cohorts %>%
filter(treatment_year == i) %>%
mutate(treatment_year_group = i) %>%
mutate(cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
for(i in unique(data_cohorts$treatment_year[data_cohorts$treatment_year != Inf])){
# Get treated state
treated_state <- data_cohorts %>%
filter(treatment_year == i) %>%
mutate(treatment_year_group = i) %>%
mutate(cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
max_year <- max(treated_state$year)
# Get control states within a 10 year (pre and post) from treatment year
control_state_10 <- data_cohorts %>%
filter(treatment_year > i + 10,
year <= i + 10, year >= i - 10) %>%
mutate(treatment_year_group = i,
center_time = 0,
treated = 0,
cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
control_state_20 <- data_cohorts %>%
filter(treatment_year > i + 20,
year <= i + 20, year >= i - 20) %>%
mutate(treatment_year_group = i,
center_time = 0,
treated = 0,
cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
collect_10[[length(collect_10)+1]] <- rbind(treated_state, control_state_10)
collect_20[[length(collect_20)+1]] <- rbind(treated_state, control_state_20)
}
dat_10 <- do.call(rbind, collect_10)
dat_20 <- do.call(rbind, collect_20)
dat_10 <- dat_10 %>% dummy_cols(select_columns = "center_time")
dat_10 <- dat_10 %>% dummy_cols(select_columns = "center_time")
dat_20 <- dat_20 %>% dummy_cols(select_columns = "center_time")
dat_20 <- dat_20 %>% dummy_cols(select_columns = "center_time")
# DID - 10 period
dat <- dat_10
# DID - 10 period
dat <- dat_10
dat <- dat %>%
mutate(log_total_spend = log(total_medicaid))
cohorts2 <- c("1991-2000", "2001-2010", "2011-2022")
outcomes <- list(
pct_in_comp_mco = "Prop. Comp MCO Enroll",
log_total_spend = "Log(Total Medicaid Spending)",
log_all_medicaid_spending_per_cap = "Log(Total Medicaid Spending per Capita)"
)
# Initialize an empty list to store the plots
plot_list <- list()
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts2) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_10_interval", cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
# Define treatment cohorts
assign_cohort_10 <- function(treatment_year) {
case_when(
treatment_year >= 1991 & treatment_year <= 2000 ~ "1991-2000",
treatment_year >= 2001 & treatment_year <= 2010 ~ "2001-2010",
treatment_year >= 2011 & treatment_year <= 2022 ~ "2011-2022",
TRUE ~ "never-treated"  # Default fallback if none of the above match
)
}
# Construct stacked data
# For each treatment year, construct control without treatment within 10/20 years
collect_10 <- list()
collect_20 <- list()
for(i in unique(data_cohorts$treatment_year[data_cohorts$treatment_year != Inf])){
# Get treated state
treated_state <- data_cohorts %>%
filter(treatment_year == i) %>%
mutate(treatment_year_group = i) %>%
mutate(cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
max_year <- max(treated_state$year)
# Get control states within a 10 year (pre and post) from treatment year
control_state_10 <- data_cohorts %>%
filter(treatment_year > i + 10,
year <= i + 10, year >= i - 10) %>%
mutate(treatment_year_group = i,
center_time = 0,
treated = 0,
cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
control_state_20 <- data_cohorts %>%
filter(treatment_year > i + 20,
year <= i + 20, year >= i - 20) %>%
mutate(treatment_year_group = i,
center_time = 0,
treated = 0,
cohort_10_interval = assign_cohort_10(treatment_year_group)) %>%
select(state, year, center_time, treated, total_medicaid,
log_all_medicaid_spending_per_cap, all_medicaid_spending_per_cap,
pct_in_comp_mco, treatment_year, treatment_year_group, cohort_10_interval)
collect_10[[length(collect_10)+1]] <- rbind(treated_state, control_state_10)
collect_20[[length(collect_20)+1]] <- rbind(treated_state, control_state_20)
}
dat_10 <- do.call(rbind, collect_10)
dat_20 <- do.call(rbind, collect_20)
dat_10 <- dat_10 %>% dummy_cols(select_columns = "center_time")
dat_20 <- dat_20 %>% dummy_cols(select_columns = "center_time")
# DID - 10 period
dat <- dat_10
dat <- dat %>%
mutate(log_total_spend = log(total_medicaid))
cohorts2 <- c("1991-2000", "2001-2010", "2011-2022")
outcomes <- list(
pct_in_comp_mco = "Prop. Comp MCO Enroll",
log_total_spend = "Log(Total Medicaid Spending)",
log_all_medicaid_spending_per_cap = "Log(Total Medicaid Spending per Capita)"
)
# Initialize an empty list to store the plots
plot_list <- list()
# Loop through each outcome
for (outcome_name in names(outcomes)) {
outcome_label <- outcomes[[outcome_name]]
# Loop through each cohort
for (cohort in cohorts2) {
# Generate the plot
p <- did_graph_trend_10(dat, outcome_name, outcome_label, "cohort_10_interval", cohort)
# Store the plot in the list
plot_list[[paste(outcome_name, cohort, sep = "_")]] <- p
}
outcome_plots <- plot_list[grep(outcome_name, names(plot_list))]
print(outcome_plots)
}
library(ggplot2)
library(ggthemes)
library(fastDummies)
library(RColorBrewer)
library(scales)
library(lfe)
library(haven)
library(readxl)
library(readr)
library(dplyr)
library(ivreg)
library(gridExtra)
library(tinytex)
library(synthdid)
library(did)
library(tidyverse)
# Get vector of cohort years
cohorts <- sort(unique(dat$treatment_year))
cohorts <- cohorts[!is.infinite(cohorts)]
cohorts
